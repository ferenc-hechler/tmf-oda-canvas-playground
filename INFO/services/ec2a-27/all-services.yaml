apiVersion: v1
items:
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: canvas
      meta.helm.sh/release-namespace: canvas
    creationTimestamp: "2024-01-15T16:57:29Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      helm.sh/chart: keycloak-13.0.2
    name: canvas-keycloak
    namespace: canvas
    resourceVersion: "6467"
    uid: 0f4db145-0cbe-4e8a-8a1d-53f588cb4eca
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.52.1.174
    clusterIPs:
    - 10.52.1.174
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 31145
      port: 8083
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/name: keycloak
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: canvas
      meta.helm.sh/release-namespace: canvas
    creationTimestamp: "2024-01-15T16:57:29Z"
    labels:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: keycloak
      helm.sh/chart: keycloak-13.0.2
    name: canvas-keycloak-headless
    namespace: canvas
    resourceVersion: "6459"
    uid: 2f094032-1078-4173-81aa-9ddeab571eec
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8083
      protocol: TCP
      targetPort: http
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: keycloak
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/name: keycloak
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: canvas
      meta.helm.sh/release-namespace: canvas
    creationTimestamp: "2024-01-15T16:57:29Z"
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-12.1.9
    name: canvas-postgresql
    namespace: canvas
    resourceVersion: "6430"
    uid: f260bb1f-c3c8-4b0c-b216-48351cac2613
  spec:
    clusterIP: 10.52.9.1
    clusterIPs:
    - 10.52.9.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    selector:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: canvas
      meta.helm.sh/release-namespace: canvas
    creationTimestamp: "2024-01-15T16:57:29Z"
    labels:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: postgresql
      helm.sh/chart: postgresql-12.1.9
      service.alpha.kubernetes.io/tolerate-unready-endpoints: "true"
    name: canvas-postgresql-hl
    namespace: canvas
    resourceVersion: "6468"
    uid: 84829ff1-522a-4e08-9485-cd836a8c8cca
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-postgresql
      port: 5432
      protocol: TCP
      targetPort: tcp-postgresql
    publishNotReadyAddresses: true
    selector:
      app.kubernetes.io/component: primary
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/name: postgresql
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: canvas
      meta.helm.sh/release-namespace: canvas
    creationTimestamp: "2024-01-15T16:57:29Z"
    labels:
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: oda-webhook
      app.kubernetes.io/version: 1.0.0
      helm.sh/chart: oda-webhook-1.0.0
    name: compcrdwebhook
    namespace: canvas
    resourceVersion: "6436"
    uid: 1062e866-950b-4d1e-b69f-70282b34b26b
  spec:
    clusterIP: 10.52.6.88
    clusterIPs:
    - 10.52.6.88
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - nodePort: 30149
      port: 443
      protocol: TCP
      targetPort: 8443
    selector:
      app: compcrdwebhook
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: canvas
      meta.helm.sh/release-namespace: canvas
    creationTimestamp: "2024-01-15T16:57:29Z"
    labels:
      app: oda-controller-ingress
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: controller
      app.kubernetes.io/version: 1.0.0
      helm.sh/chart: controller-1.0.1
    name: seccon
    namespace: canvas
    resourceVersion: "6448"
    uid: af00d6e6-0e7a-4f89-ad69-a5453c0814cc
  spec:
    clusterIP: 10.52.4.15
    clusterIPs:
    - 10.52.4.15
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: seccon
      nodePort: 31302
      port: 5000
      protocol: TCP
      targetPort: seccon
    selector:
      app: oda-controller-ingress
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: canvas
      meta.helm.sh/release-namespace: canvas
    creationTimestamp: "2024-01-15T16:57:29Z"
    labels:
      app: cert-manager
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: cert-manager
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: cert-manager-v1.11.0
    name: canvas-cert-manager
    namespace: cert-manager
    resourceVersion: "6452"
    uid: 7e98c512-77e2-4f0b-a1ce-0ef7d9ee52cb
  spec:
    clusterIP: 10.52.9.255
    clusterIPs:
    - 10.52.9.255
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-prometheus-servicemonitor
      port: 9402
      protocol: TCP
      targetPort: 9402
    selector:
      app.kubernetes.io/component: controller
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/name: cert-manager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: canvas
      meta.helm.sh/release-namespace: canvas
    creationTimestamp: "2024-01-15T16:57:29Z"
    labels:
      app: webhook
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: webhook
      app.kubernetes.io/version: v1.11.0
      helm.sh/chart: cert-manager-v1.11.0
    name: canvas-cert-manager-webhook
    namespace: cert-manager
    resourceVersion: "6442"
    uid: 292ff297-ef62-4285-8852-bf65c9811650
  spec:
    clusterIP: 10.52.2.31
    clusterIPs:
    - 10.52.2.31
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app.kubernetes.io/component: webhook
      app.kubernetes.io/instance: canvas
      app.kubernetes.io/name: webhook
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: code-server
      meta.helm.sh/release-namespace: code-server
    creationTimestamp: "2024-01-15T17:10:22Z"
    labels:
      app.kubernetes.io/instance: code-server
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: code-server
      helm.sh/chart: code-server-3.16.0
    name: code-server
    namespace: code-server
    resourceVersion: "13906"
    uid: 25819d80-4ec9-4e86-b660-9872077fe0ab
  spec:
    clusterIP: 10.52.12.106
    clusterIPs:
    - 10.52.12.106
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      port: 8080
      protocol: TCP
      targetPort: http
    selector:
      app.kubernetes.io/instance: code-server
      app.kubernetes.io/name: code-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kopf.zalando.org/last-handled-configuration: |
        {"spec":{"ports":[{"name":"tcp-prodcat-mongodb","protocol":"TCP","port":27017,"targetPort":"prodcat-mongodb","nodePort":31448}],"selector":{"impl":"prodcat-mongodb"},"clusterIP":"10.52.9.112","clusterIPs":["10.52.9.112"],"type":"NodePort","sessionAffinity":"None","externalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","internalTrafficPolicy":"Cluster"},"metadata":{"labels":{"app":"prodcat-productcatalog","app.kubernetes.io/managed-by":"Helm","oda.tmforum.org/componentName":"prodcat-productcatalog"},"annotations":{"cloud.google.com/neg":"{\"ingress\":true}","meta.helm.sh/release-name":"prodcat","meta.helm.sh/release-namespace":"components"}}}
      meta.helm.sh/release-name: prodcat
      meta.helm.sh/release-namespace: components
    creationTimestamp: "2024-01-15T17:17:04Z"
    labels:
      app: prodcat-productcatalog
      app.kubernetes.io/managed-by: Helm
      oda.tmforum.org/componentName: prodcat-productcatalog
    name: prodcat-mongodb
    namespace: components
    ownerReferences:
    - apiVersion: oda.tmforum.org/v1beta2
      blockOwnerDeletion: true
      controller: true
      kind: component
      name: prodcat-productcatalog
      uid: 35ff206a-0112-4ff1-baee-75dc227ead59
    resourceVersion: "18809"
    uid: 6c5b27a0-5810-4167-987e-3aa2b90250a9
  spec:
    clusterIP: 10.52.9.112
    clusterIPs:
    - 10.52.9.112
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: tcp-prodcat-mongodb
      nodePort: 31448
      port: 27017
      protocol: TCP
      targetPort: prodcat-mongodb
    selector:
      impl: prodcat-mongodb
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kopf.zalando.org/last-handled-configuration: |
        {"spec":{"ports":[{"name":"http-prodcat-partyroleapi","protocol":"TCP","port":8080,"targetPort":"prodcat-prapi","nodePort":30826}],"selector":{"impl":"prodcat-partyroleapi"},"clusterIP":"10.52.10.137","clusterIPs":["10.52.10.137"],"type":"NodePort","sessionAffinity":"None","externalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","internalTrafficPolicy":"Cluster"},"metadata":{"labels":{"app":"prodcat-productcatalog","app.kubernetes.io/managed-by":"Helm","oda.tmforum.org/componentName":"prodcat-productcatalog"},"annotations":{"cloud.google.com/neg":"{\"ingress\":true}","meta.helm.sh/release-name":"prodcat","meta.helm.sh/release-namespace":"components"}}}
      meta.helm.sh/release-name: prodcat
      meta.helm.sh/release-namespace: components
    creationTimestamp: "2024-01-15T17:17:04Z"
    labels:
      app: prodcat-productcatalog
      app.kubernetes.io/managed-by: Helm
      oda.tmforum.org/componentName: prodcat-productcatalog
    name: prodcat-partyroleapi
    namespace: components
    ownerReferences:
    - apiVersion: oda.tmforum.org/v1beta2
      blockOwnerDeletion: true
      controller: true
      kind: component
      name: prodcat-productcatalog
      uid: 35ff206a-0112-4ff1-baee-75dc227ead59
    resourceVersion: "18793"
    uid: 04991917-0470-45ec-a932-cffefa837d16
  spec:
    clusterIP: 10.52.10.137
    clusterIPs:
    - 10.52.10.137
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-prodcat-partyroleapi
      nodePort: 30826
      port: 8080
      protocol: TCP
      targetPort: prodcat-prapi
    selector:
      impl: prodcat-partyroleapi
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kopf.zalando.org/last-handled-configuration: |
        {"spec":{"ports":[{"name":"http-prodcat-prodcatapi","protocol":"TCP","port":8080,"targetPort":"prodcat-pcapi","nodePort":32450}],"selector":{"impl":"prodcat-prodcatapi"},"clusterIP":"10.52.10.112","clusterIPs":["10.52.10.112"],"type":"NodePort","sessionAffinity":"None","externalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","internalTrafficPolicy":"Cluster"},"metadata":{"labels":{"app":"prodcat-productcatalog","app.kubernetes.io/managed-by":"Helm","oda.tmforum.org/componentName":"prodcat-productcatalog"},"annotations":{"cloud.google.com/neg":"{\"ingress\":true}","meta.helm.sh/release-name":"prodcat","meta.helm.sh/release-namespace":"components"}}}
      meta.helm.sh/release-name: prodcat
      meta.helm.sh/release-namespace: components
    creationTimestamp: "2024-01-15T17:17:04Z"
    labels:
      app: prodcat-productcatalog
      app.kubernetes.io/managed-by: Helm
      oda.tmforum.org/componentName: prodcat-productcatalog
    name: prodcat-prodcatapi
    namespace: components
    ownerReferences:
    - apiVersion: oda.tmforum.org/v1beta2
      blockOwnerDeletion: true
      controller: true
      kind: component
      name: prodcat-productcatalog
      uid: 35ff206a-0112-4ff1-baee-75dc227ead59
    resourceVersion: "18788"
    uid: 5be130a4-79b2-4f4e-ac42-8187aa9ae0cc
  spec:
    clusterIP: 10.52.10.112
    clusterIPs:
    - 10.52.10.112
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-prodcat-prodcatapi
      nodePort: 32450
      port: 8080
      protocol: TCP
      targetPort: prodcat-pcapi
    selector:
      impl: prodcat-prodcatapi
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      kopf.zalando.org/last-handled-configuration: |
        {"spec":{"ports":[{"name":"http-prodcat-productcatalog-sm","protocol":"TCP","port":4000,"targetPort":4000,"nodePort":30543}],"selector":{"impl":"prodcat-metricsapi"},"clusterIP":"10.52.2.130","clusterIPs":["10.52.2.130"],"type":"NodePort","sessionAffinity":"None","externalTrafficPolicy":"Cluster","ipFamilies":["IPv4"],"ipFamilyPolicy":"SingleStack","internalTrafficPolicy":"Cluster"},"metadata":{"labels":{"app":"prodcat-productcatalog","app.kubernetes.io/managed-by":"Helm","name":"prodcat-productcatalog-sm","oda.tmforum.org/componentName":"prodcat-productcatalog"},"annotations":{"cloud.google.com/neg":"{\"ingress\":true}","meta.helm.sh/release-name":"prodcat","meta.helm.sh/release-namespace":"components"}}}
      meta.helm.sh/release-name: prodcat
      meta.helm.sh/release-namespace: components
    creationTimestamp: "2024-01-15T17:17:04Z"
    labels:
      app: prodcat-productcatalog
      app.kubernetes.io/managed-by: Helm
      name: prodcat-productcatalog-sm
      oda.tmforum.org/componentName: prodcat-productcatalog
    name: prodcat-productcatalog-sm
    namespace: components
    ownerReferences:
    - apiVersion: oda.tmforum.org/v1beta2
      blockOwnerDeletion: true
      controller: true
      kind: component
      name: prodcat-productcatalog
      uid: 35ff206a-0112-4ff1-baee-75dc227ead59
    resourceVersion: "18790"
    uid: 6e961830-62b0-4789-80cb-05fbbaa589bf
  spec:
    clusterIP: 10.52.2.130
    clusterIPs:
    - 10.52.2.130
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-prodcat-productcatalog-sm
      nodePort: 30543
      port: 4000
      protocol: TCP
      targetPort: 4000
    selector:
      impl: prodcat-metricsapi
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-15T16:46:25Z"
    labels:
      component: apiserver
      provider: kubernetes
    name: kubernetes
    namespace: default
    resourceVersion: "191"
    uid: 786e9df6-bc38-4f1b-b4fb-9d8924f39586
  spec:
    clusterIP: 10.52.0.1
    clusterIPs:
    - 10.52.0.1
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: https
      port: 443
      protocol: TCP
      targetPort: 443
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.7.4-gke.2
      components.gke.io/layer: addon
    creationTimestamp: "2024-01-15T16:47:05Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: alertmanager
    namespace: gmp-system
    resourceVersion: "664"
    uid: 6bc9a1e4-a750-469d-9225-42356b34921c
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: alertmanager
      port: 9093
      protocol: TCP
      targetPort: 9093
    selector:
      app.kubernetes.io/name: alertmanager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: managed-prometheus
      components.gke.io/component-version: 0.7.4-gke.2
      components.gke.io/layer: addon
    creationTimestamp: "2024-01-15T16:47:03Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: gmp-operator
    namespace: gmp-system
    resourceVersion: "636"
    uid: a07999fc-7692-4fdf-9c46-c900afae189b
  spec:
    clusterIP: 10.52.10.60
    clusterIPs:
    - 10.52.10.60
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: legacy
      port: 8443
      protocol: TCP
      targetPort: webhook
    - name: webhook
      port: 443
      protocol: TCP
      targetPort: web
    selector:
      app.kubernetes.io/component: operator
      app.kubernetes.io/name: gmp-operator
      app.kubernetes.io/part-of: gmp
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: istio-ingress
      meta.helm.sh/release-namespace: istio-ingress
    creationTimestamp: "2024-01-15T16:51:17Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app: istio-ingress
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/name: istio-ingress
      app.kubernetes.io/version: 1.20.2
      helm.sh/chart: gateway-1.20.2
      istio: ingressgateway
    name: istio-ingress
    namespace: istio-ingress
    resourceVersion: "5677"
    uid: 43575754-383f-425c-86f9-0895c0c11240
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.52.13.196
    clusterIPs:
    - 10.52.13.196
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: status-port
      nodePort: 31861
      port: 15021
      protocol: TCP
      targetPort: 15021
    - name: http2
      nodePort: 31726
      port: 80
      protocol: TCP
      targetPort: 80
    - name: https
      nodePort: 30630
      port: 443
      protocol: TCP
      targetPort: 443
    selector:
      app: istio-ingress
      istio: ingressgateway
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 34.116.255.14
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      meta.helm.sh/release-name: istiod
      meta.helm.sh/release-namespace: istio-system
    creationTimestamp: "2024-01-15T16:49:58Z"
    labels:
      app: istiod
      app.kubernetes.io/managed-by: Helm
      install.operator.istio.io/owning-resource: unknown
      istio: pilot
      istio.io/rev: default
      operator.istio.io/component: Pilot
      release: istiod
    name: istiod
    namespace: istio-system
    resourceVersion: "2423"
    uid: 59d88522-94ff-463b-945f-f907b384ae35
  spec:
    clusterIP: 10.52.12.170
    clusterIPs:
    - 10.52.12.170
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: grpc-xds
      port: 15010
      protocol: TCP
      targetPort: 15010
    - name: https-dns
      port: 15012
      protocol: TCP
      targetPort: 15012
    - name: https-webhook
      port: 443
      protocol: TCP
      targetPort: 15017
    - name: http-monitoring
      port: 15014
      protocol: TCP
      targetPort: 15014
    selector:
      app: istiod
      istio: pilot
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: l7-lb-controller-combined
      components.gke.io/component-version: 1.23.3-gke.1
      components.gke.io/layer: addon
    creationTimestamp: "2024-01-15T16:46:59Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: glbc
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: GLBCDefaultBackend
    name: default-http-backend
    namespace: kube-system
    resourceVersion: "543"
    uid: 57e50b2d-58c9-40e0-b8a9-b66c803f1f89
  spec:
    clusterIP: 10.52.1.115
    clusterIPs:
    - 10.52.1.115
    externalTrafficPolicy: Cluster
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 32001
      port: 80
      protocol: TCP
      targetPort: 8080
    selector:
      k8s-app: glbc
    sessionAffinity: None
    type: NodePort
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2024-01-15T16:46:36Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: KubeDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "200"
    uid: ddbee623-5281-4add-a1d2-69cda6bf6f2c
  spec:
    clusterIP: 10.52.0.10
    clusterIPs:
    - 10.52.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      cloud.google.com/neg: '{"ingress":true}'
      components.gke.io/component-name: metrics-server
      components.gke.io/component-version: 0.5.2-gke.15
      components.gke.io/layer: addon
    creationTimestamp: "2024-01-15T16:47:09Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "719"
    uid: ee284000-1bca-4e55-9bbe-b5d129307258
  spec:
    clusterIP: 10.52.13.202
    clusterIPs:
    - 10.52.13.202
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
kind: List
metadata:
  resourceVersion: ""
